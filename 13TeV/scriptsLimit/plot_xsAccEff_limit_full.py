#!/usr/bin/env python
import sys, os, subprocess, string, re
from ROOT import *
from array import array

gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.045, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.045, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
t_m = 0.06  ##top margin
b_m = 0.11   ##botton margin
l_m = 0.115  ##left margin
r_m = 0.04  ##right margin
gStyle.SetPadTopMargin(t_m)
gStyle.SetPadBottomMargin(b_m)
gStyle.SetPadLeftMargin(l_m)
gStyle.SetPadRightMargin(r_m)
gROOT.ForceStyle()


BR = 1.0



masses = array('d', [700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0])
xs_obs_limits  = array('d', [0.041617700000000001, 0.028199800000000001, 0.012456399999999999, 0.0068797299999999997, 0.0072236000000000002, 0.0097994299999999996, 0.0078101799999999999, 0.0058375299999999996, 0.0059526600000000002, 0.0040230400000000003, 0.0022409800000000001, 0.00157679, 0.00163478, 0.0015753799999999999, 0.00164766, 0.00161448, 0.0013127600000000001, 0.00106802, 0.00096534500000000005, 0.00069808700000000001, 0.00045258100000000002, 0.00034450099999999999, 0.00033729099999999998, 0.00035082899999999998, 0.00029510700000000002, 0.00024799400000000002, 0.00022161899999999999, 0.000198949, 0.00020056499999999999, 0.00020053399999999999, 0.00019497899999999999, 0.00019059, 0.00018706699999999999, 0.00019645, 0.00019343499999999999, 0.00019100000000000001, 0.000187684, 0.000185725])
xs_obs_limits_fb = array('d', [1000.0 * float(b) for b in xs_obs_limits ])

xs_exp_limits = array('d', [0.034017400000000003, 0.0236267, 0.017174700000000001, 0.0131504, 0.0091476200000000004, 0.0075668899999999997, 0.0061915299999999998, 0.0048491899999999998, 0.0036217100000000002, 0.0031707599999999999, 0.00262977, 0.00223924, 0.0017666699999999999, 0.0014834900000000001, 0.0012513800000000001, 0.00104235, 0.00090263599999999995, 0.00084272999999999998, 0.00075650800000000003, 0.00064035100000000005, 0.00055320900000000004, 0.00048018699999999997, 0.00043382300000000001, 0.00041465499999999999, 0.00040243499999999998, 0.00035380299999999997, 0.00033528399999999998, 0.00031379599999999998, 0.00031359200000000002, 0.00029277699999999998, 0.00027698000000000002, 0.00026167600000000002, 0.00024972299999999998, 0.000261344, 0.00025168, 0.00024439900000000002, 0.00023683800000000001, 0.000232215])
xs_exp_limits_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits ])

masses_exp = array('d', [700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0, 1200.0, 1100.0, 1000.0, 900.0, 800.0, 700.0])
xs_exp_limits_1sigma  = array('d', [0.023461800000000001, 0.0166678, 0.0130431, 0.0099250799999999993, 0.0068084299999999999, 0.0053540300000000001, 0.0039066099999999996, 0.0034415299999999999, 0.0026107000000000001, 0.0023362000000000001, 0.0019830500000000001, 0.00159753, 0.0013442899999999999, 0.00105342, 0.00088048, 0.00077340799999999995, 0.00066459400000000001, 0.00059910599999999997, 0.00049711299999999998, 0.000459686, 0.00041513900000000002, 0.00038011400000000003, 0.00034620799999999998, 0.00031830200000000002, 0.00030024700000000001, 0.000268089, 0.0002474, 0.00023300999999999999, 0.00023715499999999999, 0.000220227, 0.00021405299999999999, 0.00020387399999999999, 0.00020132700000000001, 0.000222456, 0.00021236000000000001, 0.000210991, 0.00020471399999999999, 0.000203895, 0.00027919700000000002, 0.000286447, 0.00030249900000000002, 0.00031988600000000002, 0.00034014199999999998, 0.00031961100000000003, 0.000359957, 0.00038123900000000001, 0.00041654700000000002, 0.00043418999999999999, 0.00043482699999999999, 0.000471275, 0.00049702700000000004, 0.00053300799999999996, 0.00058695299999999998, 0.00064008299999999995, 0.00070097400000000004, 0.00078330900000000005, 0.000887717, 0.0010092499999999999, 0.00113795, 0.0012578999999999999, 0.0014958599999999999, 0.0018019900000000001, 0.0020537699999999999, 0.0024600300000000002, 0.0031297999999999999, 0.0037372899999999999, 0.00436821, 0.0054494299999999999, 0.0068324500000000003, 0.0082700299999999994, 0.0103564, 0.014367700000000001, 0.0170528, 0.023887200000000001, 0.0323361, 0.047939900000000001])
xs_exp_limits_1sigma_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits_1sigma ])

xs_exp_limits_2sigma = array('d', [0.0159347, 0.012419299999999999, 0.0094124699999999992, 0.0071361999999999997, 0.0049863499999999996, 0.0037681099999999999, 0.0032906400000000001, 0.0024724500000000002, 0.0019731100000000001, 0.00161808, 0.00137627, 0.0011795899999999999, 0.00094375500000000001, 0.00087179499999999997, 0.00069147700000000002, 0.00059496699999999996, 0.00051154200000000003, 0.00045753599999999998, 0.00043837500000000002, 0.00037618999999999999, 0.00033843000000000002, 0.00028884000000000001, 0.00026632799999999997, 0.00025347899999999998, 0.00024871300000000002, 0.00022865299999999999, 0.000216047, 0.00020048200000000001, 0.00020652100000000001, 0.000201831, 0.00019202600000000001, 0.000185353, 0.00018619, 0.00020133600000000001, 0.00019747800000000001, 0.00019410200000000001, 0.000191719, 0.000189159, 0.00037557299999999998, 0.00040365600000000001, 0.00043961800000000002, 0.00045662900000000001, 0.00046892800000000002, 0.00043788600000000002, 0.00046318999999999999, 0.00051683299999999996, 0.00054597000000000001, 0.00060755, 0.00060477299999999996, 0.00061688599999999998, 0.00064686500000000005, 0.00072366300000000004, 0.00078025700000000002, 0.00085826800000000003, 0.00093800800000000005, 0.0011354799999999999, 0.00125405, 0.00135713, 0.0015687699999999999, 0.0018019100000000001, 0.0022568900000000001, 0.00242873, 0.0026732399999999999, 0.0033720299999999998, 0.0040291099999999998, 0.0049365099999999999, 0.0059112899999999996, 0.0069877999999999997, 0.00985019, 0.012079899999999999, 0.0139887, 0.0205077, 0.0227616, 0.032090500000000001, 0.042648400000000003, 0.068031499999999995])
xs_exp_limits_2sigma_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits_2sigma ])


masses_qstar = array('d', [    1.5,    1.7,     2.0,      2.5,      3.0,      3.3,     3.35,      3.4,     3.45,      3.5,     3.55,      3.6,      4.0,      4.5 ])
xs_qstar     = array('d', [ 0.4124, 0.1843, 0.05858, 0.009768, 0.001755, 6.366e-4, 5.428e-4, 4.662e-4, 3.947e-4, 3.385e-4, 2.821e-4, 2.388e-4, 6.241e-5, 1.270e-5 ])
xs_qstar_fb  = array('d', [  412.4,  184.3,   58.58,    9.768,    1.755, 6.366e-1, 5.428e-1, 4.662e-1, 3.947e-1, 3.385e-1, 2.821e-1, 2.388e-1, 6.241e-2, 1.270e-2 ])
eff_qstar_5a = array('d', [0.575284, 0.575951, 0.584976, 0.586976, 0.587204, 0.587204, 0.586804, 0.586204, 0.586504, 0.58509, 0.58459, 0.58409, 0.573086, 0.552783   ])

xs_5a = array('d', [float(b) * float(m) for b,m in zip(xs_qstar_fb, eff_qstar_5a)])

#print xs_5a 

result = array('d',[0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4.0,4.1,4.2,4.3,4.4])

result_2sigma= array('d',[0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4.0,4.1,4.2,4.3,4.4,4.4,4.3,4.2,4.1,4.0,3.9,3.8,3.7,3.6,3.5,3.4,3.3,3.2,3.1,3.0,2.9,2.8,2.7,2.6,2.5,2.4,2.3,2.2,2.1,2.0,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1.0,0.9,0.8,0.7])

graph_exp_2sigma = TGraph(len(masses_exp),result_2sigma,xs_exp_limits_2sigma_fb)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("q* Mass [TeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times B #times A #times #epsilon [fb]")
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-01,300)
graph_exp_2sigma.GetXaxis().SetNdivisions(510)
graph_exp_2sigma.GetXaxis().SetLimits(0.6,4.5)

graph_exp_2sigma.GetYaxis().CenterTitle()
graph_exp_2sigma.GetYaxis().SetLabelSize(0.04)
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetXaxis().CenterTitle()
graph_exp_2sigma.GetXaxis().SetLabelSize(0.04)
graph_exp_2sigma.GetXaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetXaxis().CenterTitle()

graph_exp_1sigma = TGraph(len(masses_exp),result_2sigma,xs_exp_limits_1sigma_fb)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),result,xs_exp_limits_fb)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(2)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),result,xs_obs_limits_fb)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(2)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)

graph_qstar = TGraph(len(masses_qstar),masses_qstar,xs_5a)
graph_qstar.SetLineWidth(2)                
graph_qstar.SetLineColor(2)

c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_qstar.Draw("L")

##legend = TLegend(.55,.69,.85,.92)  ## for pas twiki
legend = TLegend(.58,.52,.89,.72)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.035)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed limit","lp")
legend.AddEntry(graph_exp,"Expected limit","lp")
legend.AddEntry(graph_exp_1sigma,"Expected limit #pm 1#sigma","f")
legend.AddEntry(graph_exp_2sigma,"Expected limit #pm 2#sigma","f")
legend.Draw()

legend1 = TLegend(.16,.18,.47,.24)
legend1.SetBorderSize(0)
legend1.SetFillColor(0)
legend1.SetFillStyle(0)
legend1.SetTextFont(42)
legend1.SetTextSize(0.035)
legend1.AddEntry(graph_qstar,"Excited quark (f = 1.0)","l")
legend1.Draw()

lumiTextSize = 0.6
lumiTextOffset = 0.2
lumi = TLatex()
lumi.SetNDC()
lumi.SetTextAngle(0)
lumi.SetTextColor(kBlack)
lumi.SetTextFont(42)
lumi.SetTextAlign(31)
lumi.SetTextSize(lumiTextSize*t_m)
lumi.DrawLatex(1 - r_m, 1 - t_m +  lumiTextOffset*t_m, "19.7 fb^{-1} (8 TeV)")

cmsTextFont = 61
cmsTextSize = 0.75
extraTextFont = 52
extraOverCmsTextSize = 0.76
relExtraDY = 1.2
##posX_ = l_m     + 0.045 * (1 - l_m - r_m)  ##Top left
##posX_ = l_m     + 0.5   * (1 - l_m - r_m)   ## Centre
posX_ = 1 - r_m + 0.045 * (1 - l_m - r_m)  ## Top right
posY_ = 1 - t_m - 0.035 * (1 - t_m - b_m)

cms =  TLatex()
cms.SetNDC()
cms.SetTextFont(cmsTextFont)
cms.SetTextSize(cmsTextSize * t_m)
cms.SetTextAlign(33)  ### 11-top left;  21-top centre;  31-top right
##cms.DrawLatex(posX_, posY_, "CMS")
cms.DrawLatex(0.9, 0.9, "CMS")

### if extra text (Unpublished or Preliminary)
cms.SetTextFont(extraTextFont);
cms.SetTextAlign(33);
cms.SetTextSize(extraOverCmsTextSize*cmsTextSize*t_m);
##cms.DrawLatex(posX_, posY_- relExtraDY*cmsTextSize*t_m, extraText);
cms.DrawLatex(0.9, 0.9 - relExtraDY*cmsTextSize*t_m, "Unpublished");

l1 = TLatex()
l1.SetNDC()
l1.SetTextAlign(13)
l1.SetTextFont(62)
l1.SetTextSize(0.04)
l1.SetTextFont(42)
l1.DrawLatex(0.785,0.805, "q*#rightarrow q#gamma") ##0.21,0.26


gPad.RedrawAxis();

c.SetLogy()
c.SaveAs('ExcitedQuarksToGJ_f1p0_ObseExp_xsBRAccEff_Limits.pdf')
c.SaveAs('ExcitedQuarksToGJ_f1p0_ObseExp_xsBRAccEff_Limits.png')


