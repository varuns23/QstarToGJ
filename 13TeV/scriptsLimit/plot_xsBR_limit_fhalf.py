#!/usr/bin/env python
import sys, os, subprocess, string, re
from ROOT import *
from array import array


gROOT.SetBatch(kTRUE);
gStyle.SetOptStat(0)
gStyle.SetOptTitle(0)
gStyle.SetTitleFont(42, "XYZ")
gStyle.SetTitleSize(0.045, "XYZ")
gStyle.SetLabelFont(42, "XYZ")
gStyle.SetLabelSize(0.045, "XYZ")
gStyle.SetCanvasBorderMode(0)
gStyle.SetFrameBorderMode(0)
gStyle.SetCanvasColor(kWhite)
gStyle.SetPadTickX(1)
gStyle.SetPadTickY(1)
t_m = 0.06  ##top margin
b_m = 0.11   ##botton margin
l_m = 0.115  ##left margin
r_m = 0.04  ##right margin
gStyle.SetPadTopMargin(t_m)
gStyle.SetPadBottomMargin(b_m)
gStyle.SetPadLeftMargin(l_m)
gStyle.SetPadRightMargin(r_m)
gROOT.ForceStyle()


BR = 1.0



masses = array('d', [700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0])

xs_obs_limits  = array('d', [0.032172199999999998, 0.024260199999999999, 0.010855800000000001, 0.0065376799999999997, 0.0062754100000000004, 0.0082482000000000007, 0.0061187899999999998, 0.0042923099999999997, 0.0045939199999999996, 0.00316117, 0.00172926, 0.00128024, 0.0013677800000000001, 0.0012333800000000001, 0.0012960000000000001, 0.00143367, 0.0010339399999999999, 0.00092689699999999999, 0.00087992699999999997, 0.00062764299999999999, 0.00037498400000000003, 0.00031172799999999999, 0.000324381, 0.00032325600000000001, 0.00027191299999999998, 0.000216765, 0.00019314899999999999, 0.000184747, 0.00017984899999999999, 0.00017568799999999999, 0.00017252500000000001, 0.000169982, 0.00017652499999999999, 0.000175985, 0.00017442, 0.00017157500000000001, 0.000170388, 0.00016942899999999999])
xs_obs_limits_fb = array('d', [1000.0 * float(b) for b in xs_obs_limits ])

xs_exp_limits = array('d', [0.0278354, 0.019607099999999999, 0.0140716, 0.011164800000000001, 0.0075877999999999996, 0.0065561899999999999, 0.0052028300000000003, 0.0039369399999999999, 0.00313606, 0.0027297900000000002, 0.0022947699999999998, 0.0018911100000000001, 0.0015588799999999999, 0.0012812500000000001, 0.00105415, 0.00090136899999999995, 0.00080598599999999996, 0.00073350599999999998, 0.00065895500000000002, 0.00055628000000000003, 0.00048085499999999998, 0.00043410699999999998, 0.00039398999999999999, 0.000368241, 0.00032595999999999998, 0.00031346299999999999, 0.00029820900000000002, 0.00027977500000000001, 0.000270981, 0.000256149, 0.00024303700000000001, 0.00022821699999999999, 0.000217343, 0.00020844599999999999, 0.00020027599999999999, 0.00019738899999999999, 0.00019025199999999999, 0.00018956100000000001])
xs_exp_limits_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits ])

masses_exp = array('d', [700.0, 800.0, 900.0, 1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1500.0, 1600.0, 1700.0, 1800.0, 1900.0, 2000.0, 2100.0, 2200.0, 2300.0, 2400.0, 2500.0, 2600.0, 2700.0, 2800.0, 2900.0, 3000.0, 3100.0, 3200.0, 3300.0, 3400.0, 3500.0, 3600.0, 3700.0, 3800.0, 3900.0, 4000.0, 4100.0, 4200.0, 4300.0, 4400.0, 4400.0, 4300.0, 4200.0, 4100.0, 4000.0, 3900.0, 3800.0, 3700.0, 3600.0, 3500.0, 3400.0, 3300.0, 3200.0, 3100.0, 3000.0, 2900.0, 2800.0, 2700.0, 2600.0, 2500.0, 2400.0, 2300.0, 2200.0, 2100.0, 2000.0, 1900.0, 1800.0, 1700.0, 1600.0, 1500.0, 1400.0, 1300.0, 1200.0, 1100.0, 1000.0, 900.0, 800.0, 700.0])

xs_exp_limits_1sigma  = array('d', [0.019659099999999999, 0.014024999999999999, 0.010766400000000001, 0.0082904799999999994, 0.0059904600000000004, 0.0046141200000000002, 0.003444, 0.0030352000000000001, 0.00226655, 0.00193513, 0.00174205, 0.0014298500000000001, 0.00116092, 0.00092383400000000001, 0.000810278, 0.00066689799999999997, 0.00059059399999999995, 0.00052605299999999996, 0.00044495500000000002, 0.00040645200000000002, 0.00035938300000000001, 0.000325235, 0.00029978099999999999, 0.00028006999999999999, 0.00025322300000000001, 0.000240807, 0.00022439000000000001, 0.000209206, 0.00020218800000000001, 0.00019416600000000001, 0.00018704299999999999, 0.000184, 0.00018085, 0.00017971099999999999, 0.000175, 0.000174487, 0.00017038399999999999, 0.000171254, 0.000230275, 0.00023667600000000001, 0.00024159800000000001, 0.00025651299999999999, 0.00026498199999999998, 0.00027480099999999997, 0.00030205800000000001, 0.00032834699999999999, 0.00036117499999999998, 0.00037888899999999998, 0.00039010299999999999, 0.00041402600000000001, 0.00042943899999999999, 0.00046076599999999999, 0.00050882300000000004, 0.00056687199999999995, 0.00062264700000000004, 0.00067190200000000005, 0.00078139599999999996, 0.00088628999999999997, 0.0010284000000000001, 0.0010954199999999999, 0.00128461, 0.00152826, 0.0017788700000000001, 0.0022192499999999999, 0.0026301100000000002, 0.0032039, 0.00377656, 0.00466731, 0.0058104799999999998, 0.0071093800000000002, 0.0088254100000000005, 0.011701400000000001, 0.014348100000000001, 0.020055199999999999, 0.027130700000000001, 0.039656700000000003])
xs_exp_limits_1sigma_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits_1sigma ])

xs_exp_limits_2sigma = array('d', [0.013560600000000001, 0.010405599999999999, 0.0082094500000000001, 0.0065181600000000003, 0.0042105600000000003, 0.0032880100000000001, 0.0028082799999999998, 0.0021785300000000001, 0.00170224, 0.00129707, 0.0012791199999999999, 0.00101658, 0.00084407799999999995, 0.00075195399999999999, 0.00058640899999999998, 0.00049618899999999996, 0.000455189, 0.00038118800000000002, 0.00038306599999999999, 0.000325762, 0.00028061299999999998, 0.00025187400000000002, 0.00024331900000000001, 0.00022509, 0.00021087499999999999, 0.00020290999999999999, 0.00019694499999999999, 0.00018764500000000001, 0.000184919, 0.000178557, 0.00017440899999999999, 0.00017039900000000001, 0.00017072699999999999, 0.000168624, 0.000168481, 0.000166818, 0.00016197600000000001, 0.00016315500000000001, 0.00029784599999999999, 0.000315588, 0.00033538300000000002, 0.00035550300000000001, 0.000359444, 0.00038138100000000003, 0.00041163700000000002, 0.00044941499999999999, 0.00047931299999999998, 0.00050591099999999995, 0.00055010900000000001, 0.00054226999999999997, 0.00054609400000000001, 0.00058837199999999998, 0.00064929400000000002, 0.00071443400000000001, 0.00084815400000000005, 0.00097079899999999995, 0.00109746, 0.0011932399999999999, 0.0014520900000000001, 0.0015716599999999999, 0.00191168, 0.00202988, 0.0023107900000000001, 0.0028982399999999998, 0.00349555, 0.0042409700000000002, 0.0051592599999999997, 0.0059933699999999996, 0.0081742700000000008, 0.010243499999999999, 0.012351000000000001, 0.016716499999999999, 0.018961599999999999, 0.026378700000000001, 0.035392300000000002, 0.054151699999999997])
xs_exp_limits_2sigma_fb = array('d', [1000.0 * float(b) for b in xs_exp_limits_2sigma ])



## Atimes eff 
AEff = array ('d', [0.464278, 0.489212, 0.510378, 0.549197, 0.553, 0.556752, 0.560435, 0.564032, 0.567526, 0.570899, 0.574136, 0.577218, 0.580128, 0.58285, 0.585367, 0.58766, 0.589714, 0.591511, 0.593034, 0.594266, 0.59519, 0.595788, 0.596045, 0.595941, 0.595461, 0.594588, 0.593304, 0.591592, 0.589435, 0.586816, 0.583718, 0.580124, 0.576016, 0.571379, 0.566193, 0.560444, 0.554112, 0.547182])
## for 1Sigma and 2 Sigma
AEff_Sigma = array ('d', [0.464278, 0.489212, 0.510378, 0.549197, 0.553, 0.556752, 0.560435, 0.564032, 0.567526, 0.570899, 0.574136, 0.577218, 0.580128, 0.58285, 0.585367, 0.58766, 0.589714, 0.591511, 0.593034, 0.594266, 0.59519, 0.595788, 0.596045, 0.595941, 0.595461, 0.594588, 0.593304, 0.591592, 0.589435, 0.586816, 0.583718, 0.580124, 0.576016, 0.571379, 0.566193, 0.560444, 0.554112, 0.547182,0.547182, 0.554112, 0.560444, 0.566193, 0.571379, 0.576016, 0.580124, 0.583718, 0.586816, 0.589435, 0.591592, 0.593304, 0.594588, 0.595461, 0.595941, 0.596045, 0.595788, 0.59519, 0.594266, 0.593034, 0.591511, 0.589714, 0.58766, 0.585367, 0.58285, 0.580128, 0.577218, 0.574136, 0.570899, 0.567526, 0.564032, 0.560435, 0.556752, 0.553, 0.549197, 0.510378, 0.489212, 0.464278])
##Ge new obser, expe, 1sigma and 2 sigma
xs_obs_limits_n = array('d', [float(b) / float(m) for b,m in zip(xs_obs_limits_fb, AEff )])
xs_exp_limits_n = array('d', [float(b) / float(m) for b,m in zip(xs_exp_limits_fb, AEff )])
xs_exp_limits_2sigma_n =array('d', [float(b) / float(m) for b,m in zip(xs_exp_limits_2sigma_fb, AEff_Sigma )])
xs_exp_limits_1sigma_n =array('d', [float(b) / float(m) for b,m in zip(xs_exp_limits_1sigma_fb, AEff_Sigma )])  


masses_qstar = array('d', [   1.5,     2.0,      2.5,      2.8,     2.85,      2.9,     2.95,         3.0,     3.05,      3.1,          3.5,       4.0,       4.5 ])
xs_qstar     = array('d', [ 0.105, 0.01484, 0.002425, 8.565e-4, 7.245e-4, 6.082e-4, 5.083e-4,   4.304e-4,  3.607e-4, 3.044e-4,     7.586e-5,  1.258e-5,  1.929e-6 ])
xs_qstar_fb  = array('d', [ 105.0,   14.84,    2.425, 8.565e-1, 7.245e-1, 6.082e-1, 5.083e-1,   4.304e-1,  3.607e-1, 3.044e-1,     7.586e-2,  1.258e-2,  1.929e-3 ])
eff_qstar_5a = array ('d', [ 1.0,  1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ])

xs_5a = array('d', [float(b) * float(m) for b,m in zip(xs_qstar_fb, eff_qstar_5a)])

result= array('d',[0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4.0,4.1,4.2,4.3,4.4,4.4,4.3,4.2,4.1,4.0,3.9,3.8,3.7,3.6,3.5,3.4,3.3,3.2,3.1,3.0,2.9,2.8,2.7,2.6,2.5,2.4,2.3,2.2,2.1,2.0,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1.0,0.9,0.8,0.7])

graph_exp_2sigma = TGraph(len(masses_exp),result,xs_exp_limits_2sigma_n)
graph_exp_2sigma.SetFillColor(kYellow)
graph_exp_2sigma.GetXaxis().SetTitle("q* Mass [TeV]")
graph_exp_2sigma.GetYaxis().SetTitle("#sigma #times B [fb]")
graph_exp_2sigma.GetYaxis().SetRangeUser(1e-01,300)
graph_exp_2sigma.GetXaxis().SetNdivisions(510)
graph_exp_2sigma.GetXaxis().SetLimits(0.6,4.5)

graph_exp_2sigma.GetYaxis().CenterTitle()
graph_exp_2sigma.GetYaxis().SetLabelSize(0.04)
graph_exp_2sigma.GetYaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetXaxis().CenterTitle()
graph_exp_2sigma.GetXaxis().SetLabelSize(0.04)
graph_exp_2sigma.GetXaxis().SetTitleOffset(1.1)
graph_exp_2sigma.GetXaxis().CenterTitle()

graph_exp_1sigma = TGraph(len(masses_exp),result,xs_exp_limits_1sigma_n)
graph_exp_1sigma.SetFillColor(kGreen+1)

graph_exp = TGraph(len(masses),result,xs_exp_limits_n)
#graph_exp.SetMarkerStyle(24)
graph_exp.SetLineWidth(2)
graph_exp.SetLineStyle(2)
graph_exp.SetLineColor(4)

graph_obs = TGraph(len(masses),result,xs_obs_limits_n)
graph_obs.SetMarkerStyle(20)
graph_obs.SetLineWidth(2)
#graph_obs.SetLineStyle(1)
graph_obs.SetLineColor(1)

graph_qstar = TGraph(len(masses_qstar),masses_qstar,xs_5a)
graph_qstar.SetLineWidth(2)                
graph_qstar.SetLineColor(kMagenta+2)

c = TCanvas("c", "",800,800)
c.cd()

graph_exp_2sigma.Draw("AF")
graph_exp_1sigma.Draw("F")
graph_exp.Draw("L")
graph_obs.Draw("LP")
graph_qstar.Draw("L")

##legend = TLegend(.55,.69,.85,.92)  ## for pas twiki
legend = TLegend(.58,.52,.89,.72)
legend.SetBorderSize(0)
legend.SetFillColor(0)
legend.SetFillStyle(0)
legend.SetTextFont(42)
legend.SetTextSize(0.035)
legend.SetHeader('95% CL upper limits')
legend.AddEntry(graph_obs,"Observed limit","lp")
legend.AddEntry(graph_exp,"Expected limit","lp")
legend.AddEntry(graph_exp_1sigma,"Expected limit #pm 1#sigma","f")
legend.AddEntry(graph_exp_2sigma,"Expected limit #pm 2#sigma","f")
legend.Draw()

legend1 = TLegend(.16,.20,.47,.26)
legend1.SetBorderSize(0)
legend1.SetFillColor(0)
legend1.SetFillStyle(0)
legend1.SetTextFont(42)
legend1.SetTextSize(0.035)
legend1.AddEntry(graph_qstar,"Excited quark (f = 0.5)","l")
legend1.Draw()

lumiTextSize = 0.6
lumiTextOffset = 0.2
lumi = TLatex()
lumi.SetNDC()
lumi.SetTextAngle(0)
lumi.SetTextColor(kBlack)
lumi.SetTextFont(42)
lumi.SetTextAlign(31)
lumi.SetTextSize(lumiTextSize*t_m)
lumi.DrawLatex(1 - r_m, 1 - t_m +  lumiTextOffset*t_m, "19.7 fb^{-1} (8 TeV)")

cmsTextFont = 61
cmsTextSize = 0.75
extraTextFont = 52
extraOverCmsTextSize = 0.76
relExtraDY = 1.2
##posX_ = l_m     + 0.045 * (1 - l_m - r_m)  ##Top left
##posX_ = l_m     + 0.5   * (1 - l_m - r_m)   ## Centre
posX_ = 1 - r_m + 0.045 * (1 - l_m - r_m)  ## Top right
posY_ = 1 - t_m - 0.035 * (1 - t_m - b_m)

cms =  TLatex()
cms.SetNDC()
cms.SetTextFont(cmsTextFont)
cms.SetTextSize(cmsTextSize * t_m)
cms.SetTextAlign(33)  ### 11-top left;  21-top centre;  31-top right
##cms.DrawLatex(posX_, posY_, "CMS")
cms.DrawLatex(0.9, 0.9, "CMS")

### if extra text (Unpublished or Preliminary)
cms.SetTextFont(extraTextFont);
cms.SetTextAlign(33);
cms.SetTextSize(extraOverCmsTextSize*cmsTextSize*t_m);
##cms.DrawLatex(posX_, posY_- relExtraDY*cmsTextSize*t_m, extraText);
cms.DrawLatex(0.9, 0.9 - relExtraDY*cmsTextSize*t_m, "Unpublished");

l1 = TLatex()
l1.SetNDC()
l1.SetTextAlign(13)
l1.SetTextFont(62)
l1.SetTextSize(0.04)
l1.SetTextFont(42)
l1.DrawLatex(0.785,0.805, "q*#rightarrow q#gamma") ##0.21,0.26



gPad.RedrawAxis();

c.SetLogy()
c.SaveAs('ExcitedQuarksToGJ_f0p5_ObseExp_xsBR_Limits.pdf')
c.SaveAs('ExcitedQuarksToGJ_f0p5_ObseExp_xsBR_Limits.png')

